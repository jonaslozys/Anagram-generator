@model WebApp.Models.DictionaryViewModel

@{
    ViewData["Title"] = "Dictionary";
}


<h2>Dictionary</h2>
<div>
    <form asp-action="AddWord" method="POST" class="form-inline">
        <div class="form-group">
            <input type="text" name="word" placeholder="New Word" class="form-control" />
            <button type="submit" class="btn btn-primary">Add new word</button>
        </div>
    </form>
</div>
<div>
    <form method="POST" class="form-inline">
        <div class="form-group">
            <input type="text" name="search" placeholder="word" class="form-control" />
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </form>
</div>
<br/>
<div class="clearfix">
    <a href="/dictionary/@(Model.page-1)" class="btn btn-primary">Previous page</a>
    <a href="/dictionary/@(Model.page+1)" class="btn btn-primary">Next page</a>
    <a asp-action="download" class="btn btn-success" download>Download dictionary file</a>
</div>
<br />
<ul class="list-group">
    @foreach (var word in Model.wordsDictionary)
    {
        var parameters = new Dictionary<string, string> { { "word", word.word } };
    <li class="list-group-item">
        <a asp-controller="home" asp-all-route-data="parameters" target="_blank">@word.word</a>
        <form asp-action="delete" method="post" class="form-group-lg">
            <input type="hidden" name="word" value=@word.word />
            <input type="submit" class="btn btn-danger" value="Delete" />
        </form>

    </li>
    }
</ul>

